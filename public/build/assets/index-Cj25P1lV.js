let y={};const i=e=>{if(!e||!e.query&&!e.mergeQuery)return"";const t=e.query??e.mergeQuery,s=e.mergeQuery!==void 0,F=r=>r===!0?"1":r===!1?"0":r.toString(),h=new URLSearchParams(s&&typeof window<"u"?window.location.search:"");for(const r in t){if(t[r]===void 0||t[r]===null){h.delete(r);continue}if(Array.isArray(t[r]))h.has(`${r}[]`)&&h.delete(`${r}[]`),t[r].forEach(c=>{h.append(`${r}[]`,c.toString())});else if(typeof t[r]=="object"){h.forEach((c,H)=>{H.startsWith(`${r}[`)&&h.delete(H)});for(const c in t[r])typeof t[r][c]>"u"||["string","number","boolean"].includes(typeof t[r][c])&&h.set(`${r}[${c}]`,F(t[r][c]))}else h.set(r,F(t[r]))}const _=h.toString();return _.length>0?`?${_}`:""},p=e=>{const t={...e??{}};for(const s in y)t[s]===void 0&&y[s]!==void 0&&(t[s]=y[s]);return t},o=e=>({url:o.url(e),method:"get"});o.definition={methods:["get","head"],url:"/"};o.url=e=>o.definition.url+i(e);o.get=e=>({url:o.url(e),method:"get"});o.head=e=>({url:o.url(e),method:"head"});const f=e=>({action:o.url(e),method:"get"});f.get=e=>({action:o.url(e),method:"get"});f.head=e=>({action:o.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});o.form=f;const u=e=>({url:u.url(e),method:"get"});u.definition={methods:["get","head"],url:"/demo"};u.url=e=>u.definition.url+i(e);u.get=e=>({url:u.url(e),method:"get"});u.head=e=>({url:u.url(e),method:"head"});const Q=e=>({action:u.url(e),method:"get"});Q.get=e=>({action:u.url(e),method:"get"});Q.head=e=>({action:u.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});u.form=Q;const d=e=>({url:d.url(e),method:"get"});d.definition={methods:["get","head"],url:"/dashboard"};d.url=e=>d.definition.url+i(e);d.get=e=>({url:d.url(e),method:"get"});d.head=e=>({url:d.url(e),method:"head"});const q=e=>({action:d.url(e),method:"get"});q.get=e=>({action:d.url(e),method:"get"});q.head=e=>({action:d.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});d.form=q;const l=e=>({url:l.url(e),method:"get"});l.definition={methods:["get","head"],url:"/settings/appearance"};l.url=e=>l.definition.url+i(e);l.get=e=>({url:l.url(e),method:"get"});l.head=e=>({url:l.url(e),method:"head"});const E=e=>({action:l.url(e),method:"get"});E.get=e=>({action:l.url(e),method:"get"});E.head=e=>({action:l.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});l.form=E;const n=e=>({url:n.url(e),method:"get"});n.definition={methods:["get","head"],url:"/settings/company-logo"};n.url=e=>n.definition.url+i(e);n.get=e=>({url:n.url(e),method:"get"});n.head=e=>({url:n.url(e),method:"head"});const A=e=>({action:n.url(e),method:"get"});A.get=e=>({action:n.url(e),method:"get"});A.head=e=>({action:n.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});n.form=A;const m=e=>({url:m.url(e),method:"get"});m.definition={methods:["get","head"],url:"/register"};m.url=e=>m.definition.url+i(e);m.get=e=>({url:m.url(e),method:"get"});m.head=e=>({url:m.url(e),method:"head"});const D=e=>({action:m.url(e),method:"get"});D.get=e=>({action:m.url(e),method:"get"});D.head=e=>({action:m.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});m.form=D;const g=e=>({url:g.url(e),method:"get"});g.definition={methods:["get","head"],url:"/login"};g.url=e=>g.definition.url+i(e);g.get=e=>({url:g.url(e),method:"get"});g.head=e=>({url:g.url(e),method:"head"});const b=e=>({action:g.url(e),method:"get"});b.get=e=>({action:g.url(e),method:"get"});b.head=e=>({action:g.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});g.form=b;const a=e=>({url:a.url(e),method:"post"});a.definition={methods:["post"],url:"/logout"};a.url=e=>a.definition.url+i(e);a.post=e=>({url:a.url(e),method:"post"});const $=e=>({action:a.url(e),method:"post"});$.post=e=>({action:a.url(e),method:"post"});a.form=$;export{p as a,a as b,l as c,d,n as e,o as h,g as l,i as q,m as r};
